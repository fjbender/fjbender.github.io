<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>I drink and I know things</title><link>https://idaikt.sporkify.net/</link><description>A collection of random knowledge</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 01 Sep 2023 10:06:29 +0200</lastBuildDate><atom:link href="https://idaikt.sporkify.net/index.xml" rel="self" type="application/rss+xml"/><item><title>Klarna One Checkout Experience</title><link>https://idaikt.sporkify.net/klarna-one-checkout-experience/</link><pubDate>Fri, 01 Sep 2023 10:06:29 +0200</pubDate><author>Florian Bender</author><guid>https://idaikt.sporkify.net/klarna-one-checkout-experience/</guid><description>Klarna One UK Checkout Experience In case you have ever wondered what the checkout experience looks like in live mode, here are two screen shots:</description></item><item><title>Multiple Webhook Urls in One Payment or Order</title><link>https://idaikt.sporkify.net/multiple-webhook-urls-in-one-payment-or-order/</link><pubDate>Tue, 17 Jan 2023 08:37:09 +0100</pubDate><author>Florian Bender, Savannah van Lit</author><guid>https://idaikt.sporkify.net/multiple-webhook-urls-in-one-payment-or-order/</guid><description>Multiple Webhook URLs in One Payment or Order The problem for merchants Sometimes, a merchant wants to inform multiple systems about the status changes (or the inception) of a payment (or order - we use payment synonymously throughout this article).
For instance, the merchant might use a SaaS Order Management System (OMS) and Shopware 6. Whenever a new payment reaches the state of paid, the merchant wants this information to go into their SaaS OMS, where they then pull the payment and use the information in the metadata field to pull the order from the Shopware API.</description></item><item><title>Replay Failed Webhook Calls</title><link>https://idaikt.sporkify.net/replay-failed-webhook-calls/</link><pubDate>Wed, 04 Jan 2023 17:08:22 +0100</pubDate><author>Florian Bender</author><guid>https://idaikt.sporkify.net/replay-failed-webhook-calls/</guid><description><![CDATA[Replay Failed Webhook Calls Sometimes it happens that certain webhook calls fail and the merchant doesn&rsquo;t really know why. We don&rsquo;t log the response to the webhook call anywhere, but anyone can replay the webhook payloads (including the merchant themselves) to see any eventual error messages that might come back. Fire up a Terminal and run curl like so:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 $ curl -vv -d &#34;id=ord_2yr3ld&#34; -X POST https://backend.]]></description></item><item><title>Where Do Test Credit Cards Come From</title><link>https://idaikt.sporkify.net/where-do-test-credit-cards-come-from/</link><pubDate>Mon, 02 Jan 2023 08:40:35 +0100</pubDate><author>Florian Bender</author><guid>https://idaikt.sporkify.net/where-do-test-credit-cards-come-from/</guid><description>Where Do Test Credit Cards Come From? After an interesting discussion in the Discord (you can sign up here), I wanted to look a bit more into where Test Cards even come from.
tl;dr They are proprietary per payment gateway.
And now what? Assuming you&amp;rsquo;re familiar with the three and/or four party card schemes, you might be asking yourself, which of the parties involved controls the test cards. Rolling the process up backwards:</description></item><item><title>Magento 2 Webhooks of External Changes</title><link>https://idaikt.sporkify.net/magento-2-webhooks-of-external-changes/</link><pubDate>Tue, 20 Dec 2022 16:22:58 +0100</pubDate><author>Florian Bender</author><guid>https://idaikt.sporkify.net/magento-2-webhooks-of-external-changes/</guid><description>Magento 2: Webhooks of External Changes Apparently external changes are not recognized corrently by the Magento 2 extension. If, for example, you have a setup according to the ideal flow and the ERP partially ships an order, those line items are not updated by the webhook Mollie then sends. Even worse, it might lead to 500 errors that both confuse Mollie technical support and merchants alike.
Updating the order state (see also state vs.</description></item><item><title>Recurring Setups With Mollie</title><link>https://idaikt.sporkify.net/recurring-setups-with-mollie/</link><pubDate>Fri, 09 Dec 2022 11:14:11 +0100</pubDate><author>Florian Bender</author><guid>https://idaikt.sporkify.net/recurring-setups-with-mollie/</guid><description>Sequence Diagram of Typical Recurring Cases This swimlanes.io sequence diagram displays the two main possibilities how to run recurring transactions with Mollie. There are two typical options
Use the recurring functionality on Mollie Platform Use a Recurring Backend like Chargebee, ReCharge, Billwerk, your online shop, etc. or DIY (&amp;ldquo;charge on demand&amp;rdquo;) You can find the original swimlane.io Diagram here
https://swimlanes.io/u/H_N-KgHp1</description></item><item><title>Sequence Diagram of a General Mollie Setup</title><link>https://idaikt.sporkify.net/sequence-diagram-of-a-general-mollie-setup/</link><pubDate>Fri, 09 Dec 2022 11:08:15 +0100</pubDate><author>Florian Bender</author><guid>https://idaikt.sporkify.net/sequence-diagram-of-a-general-mollie-setup/</guid><description>General Mollie Setup This swimlane.io sequence diagram includes a webshop, an ERP solution (order management) and an accounting tool. It displays the communication between the various systems and Mollie.
The most up to date version can be found here:
https://swimlanes.io/u/oo5tTmId8</description></item><item><title>Klarna Iban Invoice Email</title><link>https://idaikt.sporkify.net/klarna-iban-invoice-email/</link><pubDate>Wed, 07 Dec 2022 09:16:20 +0100</pubDate><author>Florian Bender</author><guid>https://idaikt.sporkify.net/klarna-iban-invoice-email/</guid><description>What does the Klarna invoice email look like Many merchants ask about the consumer experience when using Klarna invoice, specifically how the consumer recieves the IBAN and bank details.
We will not return the IBAN on API level (as e.g. RatePay does), as Klarna does not follow this type of white label approach. They want to position their brand directly towards the consumer.
At a minimum, the consumer will receive an email that looks like this</description></item><item><title>How to Connect Paypal to Mollie</title><link>https://idaikt.sporkify.net/how-to-connect-paypal-to-mollie/</link><pubDate>Wed, 07 Dec 2022 08:44:09 +0100</pubDate><author>Florian Bender</author><guid>https://idaikt.sporkify.net/how-to-connect-paypal-to-mollie/</guid><description>How to connect your PayPal Account to Mollie Log in to Mollie Dashboard Settings &amp;gt; Profiles &amp;gt; Desired Profile Activate the toggle next to PayPal, should look like this: Click the button, get redirected to PayPal, enter PayPal Business email Then login normally There might be a permissions screen Finally, there should be a confirmation: Looks like this when you click the button and go back to Mollie</description></item><item><title>Server to Server Credit Card Tokenization</title><link>https://idaikt.sporkify.net/server-to-server-credit-card-tokenization/</link><pubDate>Tue, 06 Dec 2022 16:44:48 +0100</pubDate><author>Florian Bender</author><guid>https://idaikt.sporkify.net/server-to-server-credit-card-tokenization/</guid><description>Server to Server Card Tokenization with Mollie Mollie in theory has an endpoint for server-to-server card tokenization. In order to have this explained to you, you have to provide a valid PCI DSS Attestation of Compliance.
This endpoint is, unfortunately, not suitable for card tokenization from an App context, as the Access-Control-Allow-Origin HTTP Header prevents this (I think, I don&amp;rsquo;t really do frontend). See the Further Reading sections for In-App alternatives.</description></item></channel></rss>